import asyncio
import logging

from fastapi import FastAPI
from telegram import Update, BotCommand, WebAppInfo, MenuButtonWebApp
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import os

TOKEN = os.getenv("7651271495:AAFrdL7sxLEx0dcvCTsJr73uabpeZ38oYng")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI
app = FastAPI()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
tg_app = ApplicationBuilder().token(TOKEN).build()

# –•—ç–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá", reply_markup={
        "keyboard": [[{
            "text": "üíà –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
            "web_app": WebAppInfo(url="https://webapp-for-bar-front-git-main-adams-projects-62b06f32.vercel.app/")
        }]],
        "resize_keyboard": True
    })

# –î–æ–±–∞–≤–ª—è–µ–º —Ö—ç–Ω–¥–ª–µ—Ä
tg_app.add_handler(CommandHandler("start", start))

# ‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
async def run_telegram():
    await tg_app.initialize()
    await tg_app.start()
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await tg_app.updater.start_polling()
    await tg_app.updater.wait()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
@app.on_event("startup")
async def startup_event():
    asyncio.create_task(run_telegram())

@app.get("/")
async def root():
    return {"message": "ü§ñ Telegram bot is running!"}
